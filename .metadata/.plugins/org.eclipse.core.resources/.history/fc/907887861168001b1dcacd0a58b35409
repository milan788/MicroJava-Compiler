package rs.ac.bg.etf.pp1;

import rs.ac.bg.etf.pp1.ast.*;
import rs.etf.pp1.mj.runtime.Code;
import rs.etf.pp1.symboltable.concepts.Obj;

public class CodeGenerator extends VisitorAdaptor {
	private int mainPc;
	
	public int getMainPc(){
		return mainPc;
	}
	
	@Override
	public void visit(ReadStatement readStatement) {
		// TODO Auto-generated method stub
	}
	
	@Override
	public void visit(PrintStatemnt printStatemnt) {
		// TODO Auto-generated method stub
	}
	
	@Override
	public void visit(AssignDesignatorStatement assignDesignatorStatement) {
		Obj designatorObj = assignDesignatorStatement.getDesignator().obj;
		Code.store(designatorObj);
	}
	
	@Override
	public void visit(IncDesignatorStatement incDesignatorStatement) {
		Obj designatorObj = incDesignatorStatement.getDesignator().obj;
		Code.loadConst(Code.const_1);
		Code.load(designatorObj);
		Code.put(Code.add);
		Code.store(designatorObj);
	}
	
	@Override
	public void visit(DecDesigntorStatement decDesigntorStatement) {
		Obj designatorObj = decDesigntorStatement.getDesignator().obj;
		Code.loadConst(Code.const_m1);
		Code.load(designatorObj);
		Code.put(Code.add);
		Code.store(designatorObj);
	}
	
	@Override
	public void visit(VarDesignator varDesignator) {
		Code.load(varDesignator.obj);
	}
	
	@Override
	public void visit(ArrayElemDesignator arrayElemDesignator) {
		// TODO Auto-generated method stub
	}
	
	@Override
	public void visit(MultipleTerms multipleTerms) {
		Addop addop = multipleTerms.getAddopTerm().getAddop();
		if(addop instanceof Add) 
			Code.put(Code.add);
		else
			Code.put(Code.sub);
	}
	
	@Override
	public void visit(MultipleFactors multipleFactors) {
		Mulop mulop = multipleFactors.getMulopFactor().getMulop();
		if(mulop instanceof Mul)
			Code.put(Code.mul);
		else if(mulop instanceof Div)
			Code.put(Code.div);
		else
			Code.put(Code.rem);
	}
	
	@Override
	public void visit(NumFactor numFactor) {
		Code.loadConst(numFactor.getNumConst().intValue());
	}
	
	@Override
	public void visit(CharFactor charFactor) {
		Code.loadConst(charFactor.getCharConst().charValue());
	}
	
	@Override
	public void visit(BoolFactor boolFactor) {
		boolean value = boolFactor.getBoolConst().booleanValue();
		Code.loadConst(value ? 1 : 0);
	}
	
	@Override
	public void visit(NewArrayFactor NewArrayFactor) {
		// TODO Auto-generated method stub
	}
}
